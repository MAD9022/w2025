(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{328:function(e,t,o){"use strict";o.r(t);var a=o(10),r=Object(a.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"projects"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#projects"}},[e._v("#")]),e._v(" Projects")]),e._v(" "),t("ol",[t("li",[t("a",{attrs:{href:"#_1-pwa-project"}},[e._v("Project One - PWA")])]),e._v(" "),t("li",[t("a",{attrs:{href:"#_2-react-project"}},[e._v("Project Two - React App")])])]),e._v(" "),t("h2",{attrs:{id:"_1-pwa-project"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-pwa-project"}},[e._v("#")]),e._v(" 1. PWA Project")]),e._v(" "),t("p",[e._v("An installable, Offline-first PWA, with a responsive layout, that will have parts that work when offline. This is a movie rental app powered by "),t("a",{attrs:{href:"https://developer.themoviedb.org/reference/intro/getting-started",target:"_blank",rel:"noopener noreferrer"}},[e._v("The Movie DataBase API"),t("OutboundLink")],1),e._v(".")]),e._v(" "),t("blockquote",[t("p",[e._v("Come up with your own fun name for the movie rental app.")])]),e._v(" "),t("p",[e._v('The app will let the user search for movies by keyword/title, and then give them the ability to add movies from the search results to cart. Once the user is finished adding movies to a cart, they can "rent" those movies to make them available for viewing. Viewing a movie will remove it from the rented movie list.')]),e._v(" "),t("p",[e._v("The search results (json) will be saved in "),t("strong",[e._v("one")]),e._v(" cache.")]),e._v(" "),t("p",[e._v("The cart items (json) will be saved in a "),t("strong",[e._v("second")]),e._v(" cache.")]),e._v(" "),t("p",[e._v("Rented movies (json) will be saved in a "),t("strong",[e._v("third")]),e._v(" cache.")]),e._v(" "),t("p",[e._v("Movie images for search results, cart items, and rented movies will be saved in a "),t("strong",[e._v("fourth")]),e._v(" cache. These images are shared for all parts of the app.")]),e._v(" "),t("p",[e._v("All the app files - HTML, CSS, JS, images, fonts, etc will be saved in a "),t("strong",[e._v("fifth")]),e._v(" cache.")]),e._v(" "),t("h3",{attrs:{id:"api-urls"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#api-urls"}},[e._v("#")]),e._v(" API URLS")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://developer.themoviedb.org/reference/search-movie",target:"_blank",rel:"noopener noreferrer"}},[e._v("Reference for the movie search"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://developer.themoviedb.org/docs/image-basics",target:"_blank",rel:"noopener noreferrer"}},[e._v("Reference for images"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://developer.themoviedb.org/reference/configuration-details",target:"_blank",rel:"noopener noreferrer"}},[e._v("Reference for API config"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://www.themoviedb.org/settings/api",target:"_blank",rel:"noopener noreferrer"}},[e._v("Your API Token page"),t("OutboundLink")],1),e._v(" You must be logged in to see this page.")])]),e._v(" "),t("p",[e._v("The app will have four screens.")]),e._v(" "),t("ol",[t("li",[t("strong",[e._v("Home")]),e._v(" - welcome message, search input, and search results.")]),e._v(" "),t("li",[t("strong",[e._v("Cart")]),e._v(" - display all the results from the cart cache.")]),e._v(" "),t("li",[t("strong",[e._v("Rented")]),e._v(" - display all the results from the rented cache.")]),e._v(" "),t("li",[t("strong",[e._v("View")]),e._v(" - display an HTML video element that plays a placeholder video and a button to mark the movie as watched.")])]),e._v(" "),t("h3",{attrs:{id:"cart-info"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cart-info"}},[e._v("#")]),e._v(" Cart Info")]),e._v(" "),t("p",[e._v("In addition to the cart Cache that holds the json file with the movie details, the home screen and the cart screen should both display a cart icon in the header which includes a button with the number of items in the cart. Clicking the cart icon will take the user to the cart screen.")]),e._v(" "),t("p",[e._v('On the cart screen, the user should be able to remove items from the cart or "rent" the whole cart. Then the app should copy the cart cache data into the rental cache. Be sure to ADD the new cart data, do not overwrite the existing data.')]),e._v(" "),t("p",[e._v('Every movie card in the search results display will need an "add to cart" button.')]),e._v(" "),t("p",[e._v("On the cart page you have two options.")]),e._v(" "),t("ol",[t("li",[e._v("have a button to rent the whole cart.")]),e._v(" "),t("li",[e._v("have a button beside each movie card to rent that one movie. Think of the cart more like a staging area. The user saves the movies to decide later. As they are rented, they get removed from the cart screen and copied into the rental cache. If you take this approach, maybe consider changing the icon from a cart to something else like favourite.")])]),e._v(" "),t("p",[e._v("If the user has multiple tabs open, then updating the cart/favourite cache on one tab needs to be updated on all tabs. This can be achieved with either "),t("code",[e._v("BroadcastChannel")]),e._v(" to send messages from one tab to the others, "),t("strong",[e._v("OR")]),e._v(" with "),t("code",[e._v("Client")]),e._v(" messaging to send a message to the Service Worker, that will be relayed to ALL open tabs.")]),e._v(" "),t("p",[e._v('After "renting" one movie or the whole cart, the user should be redirected to the rented screen.')]),e._v(" "),t("h3",{attrs:{id:"offline-functionality"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#offline-functionality"}},[e._v("#")]),e._v(" Offline Functionality")]),e._v(" "),t("p",[e._v("On the home screen, if the app is offline and the user does a search, then tell the user it is offline but display all the search results from the search cache.")]),e._v(" "),t("p",[e._v("The cart screen will show the results from the cart cache regardless of whether the user is online or offline.")]),e._v(" "),t("p",[e._v("The rented screen will show the results from the rented cache regardless of whether the user is online or offline.")]),e._v(" "),t("p",[e._v("Images for the movie should come from the image cache. If online and the image is not in the cache then fetch the image. If offline and the image is not in the cache then return a placeholder image.")]),e._v(" "),t("h3",{attrs:{id:"images"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#images"}},[e._v("#")]),e._v(" Images")]),e._v(" "),t("p",[e._v("There needs to be a placeholder image for each movie that is searched or displayed. If the API doesn't return a image file name, then default to the name of your placeholder image.")]),e._v(" "),t("p",[e._v("The service worker will save all the requested images, if not in the app cache, into the image cache.")]),e._v(" "),t("h3",{attrs:{id:"view-movie"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#view-movie"}},[e._v("#")]),e._v(" View Movie")]),e._v(" "),t("p",[e._v("Since we do not actually have the video files for a movie, just pick a placeholder mp4 file of your own to include in the website. Use an HTML "),t("code",[e._v("<video>")]),e._v(" element to display that video on the View screen.")]),e._v(" "),t("p",[e._v("On the View screen, add a "),t("code",[e._v("ScreenOrientation")]),e._v(" listener. If the orientation changes from portrait to landscape, then make the video element display as fullscreen.")]),e._v(" "),t("p",[e._v("The "),t("code",[e._v("<video>")]),e._v(" element should have its controls, which means the user will have the ability to enable and disable fullscreen mode for the video element.")]),e._v(" "),t("p",[e._v("This page also needs a button to mark the video as viewed. Clicking this will remove the movie from the rented cache and return the user to the rented screen, which display a list of the rented movies.")]),e._v(" "),t("h3",{attrs:{id:"hosting"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hosting"}},[e._v("#")]),e._v(" Hosting")]),e._v(" "),t("p",[e._v("This app will be running off a different hosting site, like Vercel or Netlify, not on Github pages. You will still need to have a private Github repo which will connect with the hosting site.")]),e._v(" "),t("h3",{attrs:{id:"responsive-design"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#responsive-design"}},[e._v("#")]),e._v(" Responsive Design")]),e._v(" "),t("p",[e._v("PWA can load on desktop or on mobile. So the layout needs to be mobile first but responsive to work on portrait or landscape and at different sizes of screens.")]),e._v(" "),t("p",[e._v("This PWA can be either a SPA or a multiple page app.")]),e._v(" "),t("p",[e._v("Your app needs a custom colour scheme that passes accessibility testing.")]),e._v(" "),t("p",[e._v("Text sizes should responsively adjust for the available space as needed.")]),e._v(" "),t("h3",{attrs:{id:"html-requirements"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#html-requirements"}},[e._v("#")]),e._v(" HTML Requirements")]),e._v(" "),t("p",[e._v("You need to have a "),t("code",[e._v("Google Font")]),e._v(" as the font used in all pages.")]),e._v(" "),t("p",[e._v("You need to have a web manifest file linked from every page. This will require you to have all the valid icons for the PWA.")]),e._v(" "),t("p",[e._v("You need to have a CSP meta tag on every page, which provides the proper restrictions for every type of file.")]),e._v(" "),t("p",[e._v("The PWA needs to be installable.")]),e._v(" "),t("h3",{attrs:{id:"service-worker-caching-strategies"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#service-worker-caching-strategies"}},[e._v("#")]),e._v(" Service Worker Caching Strategies")]),e._v(" "),t("p",[e._v("The service worker will save all the default files in the app cache when the "),t("code",[e._v("install")]),e._v(" event fires.")]),e._v(" "),t("p",[e._v("All the caches should share a version number as part of the name.")]),e._v(" "),t("p",[e._v("The old versions of the caches should be deleted when the "),t("code",[e._v("activate")]),e._v(" event fires.")]),e._v(" "),t("p",[e._v("The "),t("code",[e._v("fetch")]),e._v(" listener will handle all requests from the browser and the main script fetch calls.")]),e._v(" "),t("p",[e._v("If files are requested that are not from TMDB API, and they don't exist in the cache, then a copy of them should be saved in the cache. The google font is a good example. It is not a local file so it won't be in our default list.")]),e._v(" "),t("h3",{attrs:{id:"demo-video"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#demo-video"}},[e._v("#")]),e._v(" Demo Video")]),e._v(" "),t("p",[e._v("Here is the demo video that outlines the functionality for this app.")]),e._v(" "),t("YouTube",{attrs:{title:"Movie Night PWA Demo",url:"https://www.youtube.com/embed/e1j0z23GYV4"}}),e._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("Tips for Success")]),e._v(" "),t("ul",[t("li",[e._v("Start your project early. Don't wait until a couple days before the due date.")]),e._v(" "),t("li",[e._v("Make many commits to your repo.")]),e._v(" "),t("li",[e._v("Push to Github and update your hosted site early and often.")]),e._v(" "),t("li",[e._v("Test the production version early and often.")])])]),e._v(" "),t("h3",{attrs:{id:"submission"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#submission"}},[e._v("#")]),e._v(" Submission")]),e._v(" "),t("p",[e._v("You need to submit two links")]),e._v(" "),t("ol",[t("li",[e._v("The private github repo url.")]),e._v(" "),t("li",[e._v("Either the Vercel app url or the github pages url. You can host it in either place.")])]),e._v(" "),t("p",[e._v("Make sure you invite "),t("code",[e._v("prof3ssorSt3v3")]),e._v(" to the repo.")]),e._v(" "),t("blockquote",[t("p",[e._v("Due Week 7 (See BS LMS for exact date and time)")])]),e._v(" "),t("h1",{attrs:{id:"_2-react-project"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-react-project"}},[e._v("#")]),e._v(" 2. React Project")]),e._v(" "),t("p",[e._v("For the final project you will be working with a partner to create a full-stack React app called "),t("code",[e._v("Crapr")]),e._v(".")]),e._v(" "),t("p",[e._v("This project is a joint project between MAD9022 and MAD9124. The client-side React part of the project is built for MAD9022 and the server-side MongoDB, NodeJS, Passport, and Express part is built for MAD9124.")]),e._v(" "),t("p",[e._v("Make sure you let your instructors know who your partner is so the groups can be created in BS LMS for the assignment submissions.")]),e._v(" "),t("h2",{attrs:{id:"project-summary"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#project-summary"}},[e._v("#")]),e._v(" Project Summary")]),e._v(" "),t("p",[e._v("We are building a website that lets people get rid of unwanted crap from their homes. Everyone who visits the site needs to register and login in order to use the site. "),t("strong",[e._v("While not logged in they only see a homepage and an about page")]),e._v(". Any logged in user can "),t("code",[e._v("POST")]),e._v(" crap to get rid of or express interest in taking the crap. Let's call these different roles the "),t("code",[e._v("seller")]),e._v(" and the "),t("code",[e._v("buyer")]),e._v(".")]),e._v(" "),t("p",[e._v("After logging in, the "),t("code",[e._v("seller")]),e._v(" can create a post about what crap they are trying to get rid of. They can also view a list of all their own crap which has been posted. This list can be filtered by the statuses "),t("strong",[e._v("available")]),e._v(", "),t("strong",[e._v("interested")]),e._v(", "),t("strong",[e._v("scheduled")]),e._v(", or "),t("strong",[e._v("agreed")]),e._v(" status.")]),e._v(" "),t("p",[e._v("After logging in, the "),t("code",[e._v("buyer")]),e._v(" can search for crap based on their current location, "),t("strong",[e._v("filtered by keyword")]),e._v(".")]),e._v(" "),t("p",[e._v("When a "),t("code",[e._v("buyer")]),e._v(" finds something that they want, then they can click a button to indicate that they "),t("strong",[e._v("want")]),e._v(" to have the crap.")]),e._v(" "),t("p",[e._v("After a "),t("code",[e._v("buyer")]),e._v(" has clicked the button, a "),t("code",[e._v("seller")]),e._v(" can see that interest has been expressed in the item by viewing their own posted crap list. The "),t("code",[e._v("seller")]),e._v(" responds by providing a pickup date and time range, plus the actual physical pickup address. Alternatively the "),t("code",[e._v("seller")]),e._v(" can cancel the transaction telling the "),t("code",[e._v("buyer")]),e._v(" that they have decided to continue hoarding their crap.")]),e._v(" "),t("p",[t("strong",[e._v("The movement between statuses is defined by the endpoints in your API")])]),e._v(" "),t("p",[e._v("The "),t("code",[e._v("buyer")]),e._v(" finalizes the process by agreeing to the pickup time and date.")]),e._v(" "),t("p",[e._v("The "),t("code",[e._v("seller")]),e._v(' marks the crap as sold or "flushed" after it has been picked up.')]),e._v(" "),t("p",[e._v("When a "),t("code",[e._v("seller")]),e._v(" or "),t("code",[e._v("buyer")]),e._v(" logs on, they should be notified about a change in status of one of their items OR taken directly to the page for the first item with an updated status. A list of notifications on the home page after logging in would address this requirement.")]),e._v(" "),t("h2",{attrs:{id:"user-roles"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#user-roles"}},[e._v("#")]),e._v(" User Roles")]),e._v(" "),t("p",[e._v("While we will often use "),t("code",[e._v("buyer")]),e._v(" and "),t("code",[e._v("seller")]),e._v(" to refer to a user, this only applies to the role that they are currently fulfilling on a page. Any user can be both or either. There are not two kinds of users in the database.")]),e._v(" "),t("p",[e._v("When someone posts some crap on the website, they are acting as a "),t("code",[e._v("seller")]),e._v(".")]),e._v(" "),t("p",[e._v("When someone expresses interest in a piece of crap, they are acting as a "),t("code",[e._v("buyer")]),e._v(".")]),e._v(" "),t("p",[e._v("It all has to do with the users' relationship to each single item.")]),e._v(" "),t("h2",{attrs:{id:"navigation-routes"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#navigation-routes"}},[e._v("#")]),e._v(" Navigation Routes")]),e._v(" "),t("p",[e._v("Here is a list of the routes for the website. You can create more routes if you want/need to.")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("/")]),e._v(" : the home page which will display a search form if the user are logged in, plus a list of search results when logged in.")]),e._v(" "),t("li",[t("code",[e._v("/login")]),e._v(" : A separate route for the login/signup form to show if the user is not logged out. If the user is logged in then redirect to the home page.")]),e._v(" "),t("li",[t("code",[e._v("/offer")]),e._v(" : page where a user can offer their crap to the world.")]),e._v(" "),t("li",[t("code",[e._v("/crap")]),e._v(" : results from a search based on keyword and location. Shows only the unclaimed crap.")]),e._v(" "),t("li",[t("code",[e._v("/mine")]),e._v(" : shows all the crap posted by the current user. Can be filtered with querystring param.")]),e._v(" "),t("li",[t("code",[e._v("/crap/[id]")]),e._v(" : shows the details for a specific unclaimed crap. From this page the buyer and seller can interact with each other.")]),e._v(" "),t("li",[t("code",[e._v("/wiped")]),e._v(" : the redirect page for a specific crap if it has been flushed or doesn't exist or is under negotiation and does not belong to the current user or the user who expressed interest. Say the user manual types an id into the browser like "),t("code",[e._v("/crap/hello")]),e._v(". Since there is no item with the id "),t("code",[e._v("hello")]),e._v(", the user should be redirected to the "),t("code",[e._v("/wiped")]),e._v(" route.")]),e._v(" "),t("li",[t("code",[e._v("/about")]),e._v(" : the about page which can be seen when logged in or logged out.")])]),e._v(" "),t("p",[e._v("Redirects can be done through the "),t("code",[e._v("navigate")]),e._v(" method that you get from the "),t("code",[e._v("useNavigate()")]),e._v(" hook from "),t("code",[e._v("react-router")]),e._v(", OR with the "),t("code",[e._v("redirect")]),e._v(" method from "),t("code",[e._v("react-router")]),e._v(". The redirect for an invalid crap id is not shown in the demo video.")]),e._v(" "),t("h2",{attrs:{id:"functionality-and-features"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#functionality-and-features"}},[e._v("#")]),e._v(" Functionality and Features")]),e._v(" "),t("p",[e._v("The user needs to be logged in to be able to use any features of the site.")]),e._v(" "),t("p",[e._v("From the home page, a user can log in and then, after being logged in, do a search for items. The search form needs to have an input for a keyword plus a selection of the distance range for searching. "),t("strong",[e._v("This dropdown is missing in the demo video")]),e._v(".")]),e._v(" "),t("p",[e._v("On the search results page "),t("code",[e._v("/crap")]),e._v(" the results should display the titles and descriptions. Each result should be styled to indicate if an item belongs to the current user or not. Clicking on an item will take the user to the "),t("code",[e._v("/crap/[id]")]),e._v(" page. Items that appear on this page will only be items with a status of "),t("code",[e._v("AVAILABLE")]),e._v(".")]),e._v(" "),t("p",[e._v("On the "),t("code",[e._v("/offer")]),e._v(" page, the user should be able to upload a new piece of crap. The new item needs to include a "),t("code",[e._v("title")]),e._v(", a "),t("code",[e._v("description")]),e._v(", and an image. After uploading a new item, redirect the user to the "),t("code",[e._v("/crap/[id]")]),e._v(" page.")]),e._v(" "),t("p",[e._v("The "),t("code",[e._v("/mine")]),e._v(" page should display a series of cards with the title, description, status, AND image for each piece of crap. The statuses for an item are "),t("code",[e._v("AVAILABLE")]),e._v(", "),t("code",[e._v("INTERESTED")]),e._v(", "),t("code",[e._v("SUGGESTED")]),e._v(", and "),t("code",[e._v("AGREED")]),e._v(". Clicking on any of the cards will take the user to the "),t("code",[e._v("/card/[id]")]),e._v(" page.")]),e._v(" "),t("p",[e._v("On the "),t("code",[e._v("/card/[id]")]),e._v(" page, the user can see all the same details of the item PLUS a button to delete the item AND a form for changing the status of the item. The delete button is only shown IF the current user owns the item. Depending on the current status of the item, there may be additional information like the address, date, and time for pick up.")]),e._v(" "),t("p",[e._v("The form for changing the status of the item changes depending on the current status.")]),e._v(" "),t("ul",[t("li",[e._v("If the current status is "),t("code",[e._v("AVAILABLE")]),e._v(", then the user needs a button to change the status to "),t("code",[e._v("INTERESTED")]),e._v(". Only a user who is NOT the owner of the item will see the form and be able to make the status "),t("code",[e._v("INTERESTED")]),e._v(".")]),e._v(" "),t("li",[e._v("If the current status is "),t("code",[e._v("INTERESTED")]),e._v(", then the user needs to be able to post an "),t("code",[e._v("address")]),e._v(", a "),t("code",[e._v("date")]),e._v(" for pick, and another string that represents the time for pickup. Only the owner of the item can add this information and change the status to "),t("code",[e._v("SUGGESTED")]),e._v(".")]),e._v(" "),t("li",[e._v("If the current status is "),t("code",[e._v("SUGGESTED")]),e._v(", then the user must NOT be the owner to change the status to "),t("code",[e._v("AGREED")]),e._v(" with a click of a button.")]),e._v(" "),t("li",[e._v("If the current status is "),t("code",[e._v("AGREED")]),e._v(", then the OWNER of the item will get a button to "),t("code",[e._v("FLUSH")]),e._v(" the item. This means that it has been picked up.")])]),e._v(" "),t("p",[e._v("Reference the API instructions for more details on the statuses.")]),e._v(" "),t("h2",{attrs:{id:"user-authentication"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#user-authentication"}},[e._v("#")]),e._v(" User Authentication")]),e._v(" "),t("p",[e._v("In the Header/Nav bar for your web app, there needs to be a login or logout button that is always displayed.")]),e._v(" "),t("p",[e._v("Clicking on the login button will direct the user to a URL on your API site. This will redirect to the google auth url, and then return the user back to your web app once they have successfully logged in.")]),e._v(" "),t("p",[e._v("The token that is returned from Google Auth and your API will arrive in the querystring. It needs to be saved in a "),t("strong",[e._v("cookie")]),e._v(".")]),e._v(" "),t("p",[e._v("Each request to your API will need to include that token, from the cookie, as an "),t("code",[e._v("Authorization Bearer token")]),e._v(" Header.")]),e._v(" "),t("p",[e._v("When you log out, you will need to delete the cookie and redirect the user back to the home screen without the token.")]),e._v(" "),t("h2",{attrs:{id:"design"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#design"}},[e._v("#")]),e._v(" Design")]),e._v(" "),t("p",[e._v("Your Layout "),t("strong",[e._v("must")]),e._v(" be Accessible and Responsive.")]),e._v(" "),t("p",[e._v("Your site must have a custom colour-scheme. All colors must be defined and used via the CSS variables (properties) or in a Theme object.")]),e._v(" "),t("p",[e._v("You may use "),t("code",[e._v("TailwindCSS")]),e._v(" or "),t("code",[e._v("Material UI")]),e._v(" or other libraries like "),t("code",[e._v("shadcn")]),e._v(" to style your app.")]),e._v(" "),t("h2",{attrs:{id:"general"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#general"}},[e._v("#")]),e._v(" General")]),e._v(" "),t("p",[e._v("In your "),t("code",[e._v("index.html")]),e._v(" file, you should have a "),t("strong",[e._v("CSP meta tag")]),e._v(", a "),t("strong",[e._v("Google font link with preconnects")]),e._v(", and a "),t("strong",[e._v("custom shortcut icon (favicon)")]),e._v(".")]),e._v(" "),t("h2",{attrs:{id:"hosting-and-routing"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hosting-and-routing"}},[e._v("#")]),e._v(" Hosting and Routing")]),e._v(" "),t("p",[e._v("You will need to create a private Github Repo that holds the code for your React app. This repo is separate and distinct from the repo being used for the MAD9124 API portion of this project.")]),e._v(" "),t("p",[e._v("You will need to connect your repo to "),t("strong",[e._v("Vercel")]),e._v(", which will be responsible for the build process and hosting of the website. Remember to test early and test often on "),t("strong",[e._v("Vercel")])]),e._v(" "),t("p",[e._v("Remember to set your "),t("code",[e._v("ENV")]),e._v(" variables on "),t("strong",[e._v("Vercel")]),e._v(", so you have a different set on localhost than on Vercel.")]),e._v(" "),t("p",[e._v("Do "),t("strong",[e._v("NOT")]),e._v(" use Github pages for your hosting.")]),e._v(" "),t("p",[e._v("Optional bonus / future features")]),e._v(" "),t("ul",[t("li",[e._v("rate the buyer")]),e._v(" "),t("li",[e._v("rate the seller")]),e._v(" "),t("li",[e._v("propose alternate pick up time and date")]),e._v(" "),t("li",[e._v("push notifications about buying and selling")]),e._v(" "),t("li")]),e._v(" "),t("h2",{attrs:{id:"demo-video-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#demo-video-2"}},[e._v("#")]),e._v(" Demo Video")]),e._v(" "),t("YouTube",{attrs:{title:"Demo version of Crapr React App",url:"https://www.youtube.com/embed/HiC-eiCjJ5Y"}}),e._v(" "),t("h3",{attrs:{id:"code-review-interview"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#code-review-interview"}},[e._v("#")]),e._v(" Code Review Interview")]),e._v(" "),t("p",[e._v("20% of your grade for this project will be for completing an interview with your instructor "),t("strong",[e._v("during class in week 15.")])]),e._v(" "),t("p",[t("strong",[e._v("BOTH")]),e._v(" partners must be present at the same time for the interview. Missing the interview means that the missing person gets zero for that 20%. Your project does not need to be complete to take part\nin the code review interview process.")]),e._v(" "),t("p",[e._v("The interview will consist of two parts, for each person:")]),e._v(" "),t("ol",[t("li",[e._v("You explain how the code for one feature works.")]),e._v(" "),t("li",[e._v("Your instructor will ask you to explain one or two items your code.")])]),e._v(" "),t("h3",{attrs:{id:"code-submission"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#code-submission"}},[e._v("#")]),e._v(" Code submission")]),e._v(" "),t("p",[e._v("Submission for this project requires multiple steps.")]),e._v(" "),t("ol",[t("li",[e._v("You will need to submit the "),t("code",[e._v("private Github repo URL")]),e._v(" for your React project.")]),e._v(" "),t("li",[e._v("Submit the "),t("code",[e._v("private Github repo URL")]),e._v(" for your MAD9124 API.")]),e._v(" "),t("li",[e._v("Submit the "),t("strong",[e._v("public")]),e._v(" URL for your "),t("code",[e._v("MAD9124 API")])]),e._v(" "),t("li",[e._v("Submit the "),t("strong",[e._v("public")]),e._v(" URL for your "),t("code",[e._v("production Vercel React site")]),e._v(", not the developer URL.")]),e._v(" "),t("li",[e._v("Invite your instructor to "),t("strong",[e._v("BOTH")]),e._v(" your private repos.")])]),e._v(" "),t("p",[e._v("See BS LMS for the exact due date and time.")]),e._v(" "),t("p",[t("strong",[e._v("Late submissions will NOT be accepted.")])]),e._v(" "),t("p",[t("strong",[e._v("TEST your production version BEFORE submitting")])]),e._v(" "),t("p",[t("strong",[e._v("You must have at least 8 commits")])])],1)}),[],!1,null,null,null);t.default=r.exports}}]);